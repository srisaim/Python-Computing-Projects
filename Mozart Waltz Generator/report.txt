1. Enter the number of hours it took you to complete the project between
   the <<< and >>> signs below (eg, <<<10>>>).

   <<< 20 >>>
   
2. Enter the difficulty level (1: very easy; 5: very difficult) of the project
   between the <<< and >>> signs below (eg, <<<3>>>).

   <<< 5 >>>

3. Provide a short description of how you approached each problem, issues you 
   encountered, and how you resolved those issues.

   Problem 1 (Generating the Waltz)
      Approach: The first thing I did was read the question properly and understand the problem thoroughly.
      For generatewaltz.py, I needed to get the input values from the text file.
      To accept the minuet measures from the table, I used the stdarray.create2D to create an array with dimensions of 11 x 16.
      I set all the values to 0. Using for loops, I then used stdio.readInt() to read all values from the text file and input it into the 2-dimensional list.
      This was the same concept we learned in the transpose.py. I did the same with trio by creating an array with dimensions of 6 x 16 and set all the values to 0.
      I used stdio.readInt() to read the trio measures from the text file, and input it into the other 2-dimensional array.
      After creating my 2D lists, I then used the for loop to generate my random values, representing the dice rolls.
      In the for loop, random1 and random2 are two dice rolls which will then form random 3 by using its sum.
      After the for loop is complete, it will then output 16 random minuet measures from the list.
      Using the same concept, I created another for loop and had stdrandom.uniform(1, 7) to generate my dice roll.
      I then outputted 16 random trio measures from the list. The minuet measures combined with the trio measures result in 32 measures in total.
      That was my final output.

      Issues and resolution: The major issue I faced for this problem was how to approach it.
      I read the question several times and then outlined my approach on a piece of paper.
      One of the issues was how to make my program get the input from the text file.
      After reviewing the practice problems, I then realized transpose.py used a similar concept to read floats and ints.
      I applied the same concept by using stdio.readInt() to read the values from the text file and input them into my 2-dimensional lists.
      At first, I used stdio.readFloat() to accept the values as floats. I then realized my mistake and corrected it.
      The rest of the code was a matter of trial and error. I used the given hints, practice problems, and the textbook to figure out resolutions to my issues.

   Problem 2 (Playing the Waltz)
      Approach: The first thing I did was read the question properly and understand the problem thoroughly.
      I used stdio.readAllStrings() and set that equal to playwaltz. This will read the output of problem 1, as a string, and set it equal to playwaltz.
      I then needed to check the conditions before moving onto playing the tune. On line 9, I set n equal to len(playwaltz), which is basically the length of playwaltz.
      I used an if condition to check if n doesn't equal to 32. If the condition is true, then it will print out the following message stating waltz must contain 32 measures exactly, using sys.exit.
      I then created a for loop where i in range(0, 16), are the minute measures being tested. The if condition inside the for loop checks if the value in playwaltz is less than 1 or greater than 176.
      If the condition is true, it will print stating minuet measures must be from [1, 176].
      If the condition is false, it will go on by playing the minuet measure tunes. The second for loop follows the same concept, as it is for the trio measures.
      The for loop ranges from(16, 32). The if condition inside the for loops tests if the value in playwaltz is less than 1 or greater than 96.
      If the condition is true, it will state trio measure must be from [1, 96]. If the condition is false, it will go on by playing the tunes using the trio measures.
      If the program runs well, the program should output a beautiful melody playing the minuet tunes followed by the trio tunes.

      Issues and resolution: The major issue I faced for this problem was how to approach it.
      I read the question several times and then outlined my approach on a piece of paper.
      The most difficult part of this program was finding a way to split playwaltz to test the minuet measure conditions and the trio measure conditions.
      After going through lecture notes and discussion videos, I finally decided not to split the playwaltz into two separate lists, but rather test them in two different for loops.
      This turned out to be easier and it allowed me to test the conditions for minuet and trio measures.
      I also had trouble playing the tunes, but after tweaking my code and playing with how to input the file name, I was able to successfully play the minuet tunes followed by the trio tunes.
      I used the given hints, practice problems, and the textbook to find solutions for my problems.

4. Did you receive help from anyone? List their names, status (classmate, 
   CS110 grad, TA, other), and the nature of help received.

   Name               Status       Help Received
   ----               ------       -------------

   Richard Anarfi     TA           Discussion Class
   Saradhi Valluru    Father       Discussing issues about playwaltz.py

5. List any other comments here. Feel free to provide any feedback on how
   much you learned from doing the assignment, and whether you enjoyed
   doing it.

   This was a fun and difficult project. The problems made my brain think critically and allowed me to code in various ways.
   The trial and error process was frustrating, but the reward of playing the tune at the end was satisfying.
   I love this project, and I would recommend it to other students. This project pushed me to the limits.
